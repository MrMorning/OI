"	.file	\"STEPAVG.cpp\"\n"
"	.section	.text._ZNSt6vectorI5row_tSaIS0_EED2Ev,\"axG\",@progbits,_ZNSt6vectorI5row_tSaIS0_EED5Ev,comdat\n"
"	.align 2\n"
"	.p2align 4,,15\n"
"	.weak	_ZNSt6vectorI5row_tSaIS0_EED2Ev\n"
"	.type	_ZNSt6vectorI5row_tSaIS0_EED2Ev, @function\n"
"_ZNSt6vectorI5row_tSaIS0_EED2Ev:\n"
".LFB616:\n"
"	.cfi_startproc\n"
"	movl	4(%esp), %eax\n"
"	movl	(%eax), %eax\n"
"	testl	%eax, %eax\n"
"	je	.L1\n"
"	movl	%eax, 4(%esp)\n"
"	jmp	_ZdlPv\n"
"	.p2align 4,,7\n"
"	.p2align 3\n"
".L1:\n"
"	rep\n"
"	ret\n"
"	.cfi_endproc\n"
".LFE616:\n"
"	.size	_ZNSt6vectorI5row_tSaIS0_EED2Ev, .-_ZNSt6vectorI5row_tSaIS0_EED2Ev\n"
"	.text\n"
"	.p2align 4,,15\n"
"	.type	_Z4evalRSt6vectorI5row_tSaIS0_EE.constprop.33, @function\n"
"_Z4evalRSt6vectorI5row_tSaIS0_EE.constprop.33:\n"
".LFB747:\n"
"	.cfi_startproc\n"
"	movl	N, %edx\n"
"	pushl	%edi\n"
"	.cfi_def_cfa_offset 8\n"
"	.cfi_offset 7, -8\n"
"	pushl	%esi\n"
"	.cfi_def_cfa_offset 12\n"
"	.cfi_offset 6, -12\n"
"	pushl	%ebx\n"
"	.cfi_def_cfa_offset 16\n"
"	.cfi_offset 3, -16\n"
"	testl	%edx, %edx\n"
"	jle	.L9\n"
"	xorl	%eax, %eax\n"
"	.p2align 4,,7\n"
"	.p2align 3\n"
".L10:\n"
"	fildl	weight(,%eax,4)\n"
"	fstpl	_ZZ4evalRSt6vectorI5row_tSaIS0_EEE3tmp(,%eax,8)\n"
"	addl	$1, %eax\n"
"	cmpl	%edx, %eax\n"
"	jne	.L10\n"
".L9:\n"
"	cmpl	$1, %edx\n"
"	jle	.L11\n"
"	movl	curState, %edi\n"
"	leal	-8(,%edx,8), %esi\n"
"	xorl	%eax, %eax\n"
"	flds	.LC0\n"
"	.p2align 4,,7\n"
"	.p2align 3\n"
".L12:\n"
"	leal	(%edi,%eax), %ecx\n"
"	movl	(%ecx), %ebx\n"
"	movl	4(%ecx), %ecx\n"
"	fldl	_ZZ4evalRSt6vectorI5row_tSaIS0_EEE3tmp(,%ebx,8)\n"
"	faddl	_ZZ4evalRSt6vectorI5row_tSaIS0_EEE3tmp(,%ecx,8)\n"
"	fmul	%st(1), %st\n"
"	fstpl	_ZZ4evalRSt6vectorI5row_tSaIS0_EEE3tmp(%eax,%edx,8)\n"
"	addl	$8, %eax\n"
"	cmpl	%esi, %eax\n"
"	jne	.L12\n"
"	fstp	%st(0)\n"
".L11:\n"
"	fildl	K\n"
"	leal	-2(%edx,%edx), %eax\n"
"	fsubl	_ZZ4evalRSt6vectorI5row_tSaIS0_EEE3tmp(,%eax,8)\n"
"	popl	%ebx\n"
"	.cfi_def_cfa_offset 12\n"
"	.cfi_restore 3\n"
"	popl	%esi\n"
"	.cfi_def_cfa_offset 8\n"
"	.cfi_restore 6\n"
"	popl	%edi\n"
"	.cfi_def_cfa_offset 4\n"
"	.cfi_restore 7\n"
"	fabs\n"
"	ret\n"
"	.cfi_endproc\n"
".LFE747:\n"
"	.size	_Z4evalRSt6vectorI5row_tSaIS0_EE.constprop.33, .-_Z4evalRSt6vectorI5row_tSaIS0_EE.constprop.33\n"
"	.p2align 4,,15\n"
"	.globl	_Z4evalRSt6vectorI5row_tSaIS0_EE\n"
"	.type	_Z4evalRSt6vectorI5row_tSaIS0_EE, @function\n"
"_Z4evalRSt6vectorI5row_tSaIS0_EE:\n"
".LFB598:\n"
"	.cfi_startproc\n"
"	movl	N, %edx\n"
"	pushl	%edi\n"
"	.cfi_def_cfa_offset 8\n"
"	.cfi_offset 7, -8\n"
"	pushl	%esi\n"
"	.cfi_def_cfa_offset 12\n"
"	.cfi_offset 6, -12\n"
"	pushl	%ebx\n"
"	.cfi_def_cfa_offset 16\n"
"	.cfi_offset 3, -16\n"
"	testl	%edx, %edx\n"
"	jle	.L16\n"
"	xorl	%eax, %eax\n"
"	.p2align 4,,7\n"
"	.p2align 3\n"
".L17:\n"
"	fildl	weight(,%eax,4)\n"
"	fstpl	_ZZ4evalRSt6vectorI5row_tSaIS0_EEE3tmp(,%eax,8)\n"
"	addl	$1, %eax\n"
"	cmpl	%edx, %eax\n"
"	jne	.L17\n"
".L16:\n"
"	cmpl	$1, %edx\n"
"	jle	.L18\n"
"	movl	16(%esp), %eax\n"
"	leal	-8(,%edx,8), %esi\n"
"	flds	.LC0\n"
"	movl	(%eax), %edi\n"
"	xorl	%eax, %eax\n"
"	.p2align 4,,7\n"
"	.p2align 3\n"
".L19:\n"
"	leal	(%edi,%eax), %ecx\n"
"	movl	(%ecx), %ebx\n"
"	movl	4(%ecx), %ecx\n"
"	fldl	_ZZ4evalRSt6vectorI5row_tSaIS0_EEE3tmp(,%ebx,8)\n"
"	faddl	_ZZ4evalRSt6vectorI5row_tSaIS0_EEE3tmp(,%ecx,8)\n"
"	fmul	%st(1), %st\n"
"	fstpl	_ZZ4evalRSt6vectorI5row_tSaIS0_EEE3tmp(%eax,%edx,8)\n"
"	addl	$8, %eax\n"
"	cmpl	%esi, %eax\n"
"	jne	.L19\n"
"	fstp	%st(0)\n"
".L18:\n"
"	fildl	K\n"
"	leal	-2(%edx,%edx), %eax\n"
"	fsubl	_ZZ4evalRSt6vectorI5row_tSaIS0_EEE3tmp(,%eax,8)\n"
"	popl	%ebx\n"
"	.cfi_def_cfa_offset 12\n"
"	.cfi_restore 3\n"
"	popl	%esi\n"
"	.cfi_def_cfa_offset 8\n"
"	.cfi_restore 6\n"
"	popl	%edi\n"
"	.cfi_def_cfa_offset 4\n"
"	.cfi_restore 7\n"
"	fabs\n"
"	ret\n"
"	.cfi_endproc\n"
".LFE598:\n"
"	.size	_Z4evalRSt6vectorI5row_tSaIS0_EE, .-_Z4evalRSt6vectorI5row_tSaIS0_EE\n"
"	.section	.rodata.str1.1,\"aMS\",@progbits,1\n"
".LC3:\n"
"	.string	\"%d%d\"\n"
".LC4:\n"
"	.string	\"%d\"\n"
".LC8:\n"
"	.string	\"%d %d\n\"\n"
"	.text\n"
"	.p2align 4,,15\n"
"	.globl	_Z5solvev\n"
"	.type	_Z5solvev, @function\n"
"_Z5solvev:\n"
".LFB599:\n"
"	.cfi_startproc\n"
"	.cfi_personality 0,__gxx_personality_v0\n"
"	.cfi_lsda 0,.LLSDA599\n"
"	pushl	%ebp\n"
"	.cfi_def_cfa_offset 8\n"
"	.cfi_offset 5, -8\n"
"	pushl	%edi\n"
"	.cfi_def_cfa_offset 12\n"
"	.cfi_offset 7, -12\n"
"	pushl	%esi\n"
"	.cfi_def_cfa_offset 16\n"
"	.cfi_offset 6, -16\n"
"	pushl	%ebx\n"
"	.cfi_def_cfa_offset 20\n"
"	.cfi_offset 3, -20\n"
"	subl	$108, %esp\n"
"	.cfi_def_cfa_offset 128\n"
"	movl	$K, 8(%esp)\n"
"	movl	$N, 4(%esp)\n"
"	movl	$.LC3, (%esp)\n"
".LEHB0:\n"
"	call	scanf\n"
"	movl	N, %eax\n"
"	testl	%eax, %eax\n"
"	jle	.L23\n"
"	xorl	%ebx, %ebx\n"
"	.p2align 4,,7\n"
"	.p2align 3\n"
".L24:\n"
"	leal	weight(,%ebx,4), %eax\n"
"	addl	$1, %ebx\n"
"	movl	%eax, 4(%esp)\n"
"	movl	$.LC4, (%esp)\n"
"	call	scanf\n"
"	movl	N, %eax\n"
"	cmpl	%ebx, %eax\n"
"	jg	.L24\n"
".L23:\n"
"	testl	%eax, %eax\n"
"	movl	%eax, %ebx\n"
"	movl	$0, 84(%esp)\n"
"	movl	$0, 88(%esp)\n"
"	movl	$0, 92(%esp)\n"
"	je	.L25\n"
"	cmpl	$536870911, %eax\n"
"	ja	.L64\n"
"	leal	0(,%eax,8), %edi\n"
"	movl	%edi, (%esp)\n"
"	call	_Znwj\n"
".LEHE0:\n"
"	addl	%eax, %edi\n"
"	movl	%eax, %esi\n"
"	movl	%eax, 84(%esp)\n"
"	movl	%edi, 92(%esp)\n"
"	.p2align 4,,7\n"
"	.p2align 3\n"
".L27:\n"
"	movl	$0, (%eax)\n"
"	movl	$0, 4(%eax)\n"
"	addl	$8, %eax\n"
"	subl	$1, %ebx\n"
"	jne	.L27\n"
"	movl	%esi, 72(%esp)\n"
"	movl	%esi, %eax\n"
".L28:\n"
"	movl	curState, %edx\n"
"	movl	%edi, %ebx\n"
"	movl	curState+8, %ecx\n"
"	subl	72(%esp), %ebx\n"
"	movl	%edi, 88(%esp)\n"
"	movl	%edi, 52(%esp)\n"
"	subl	%edx, %ecx\n"
"	sarl	$3, %ebx\n"
"	sarl	$3, %ecx\n"
"	cmpl	%ecx, %ebx\n"
"	jbe	.L29\n"
"	testl	%ebx, %ebx\n"
"	je	.L51\n"
"	cmpl	$536870911, %ebx\n"
"	ja	.L65\n"
"	leal	0(,%ebx,8), %edi\n"
"	movl	%edi, (%esp)\n"
".LEHB1:\n"
"	call	_Znwj\n"
".LEHE1:\n"
"	testl	%ebx, %ebx\n"
"	movl	%eax, %ebp\n"
"	je	.L32\n"
"	movl	%edi, 8(%esp)\n"
"	movl	%esi, 4(%esp)\n"
"	movl	%eax, (%esp)\n"
"	call	memmove\n"
".L32:\n"
"	movl	curState, %eax\n"
"	testl	%eax, %eax\n"
"	je	.L33\n"
"	movl	%eax, (%esp)\n"
"	call	_ZdlPv\n"
".L33:\n"
"	movl	84(%esp), %eax\n"
"	leal	0(%ebp,%edi), %ebx\n"
"	movl	%ebp, curState\n"
"	movl	%ebx, curState+8\n"
".L34:\n"
"	testl	%eax, %eax\n"
"	movl	%ebx, curState+4\n"
"	je	.L39\n"
"	movl	%eax, (%esp)\n"
"	call	_ZdlPv\n"
".L39:\n"
"	cmpl	$1, N\n"
"	jle	.L40\n"
"	movl	curState, %esi\n"
"	movl	$1, %edx\n"
"	xorl	%eax, %eax\n"
"	.p2align 4,,7\n"
"	.p2align 3\n"
".L41:\n"
"	leal	(%esi,%eax,8), %ecx\n"
"	leal	(%eax,%eax), %ebx\n"
"	addl	$1, %eax\n"
"	movl	%edx, 4(%ecx)\n"
"	addl	$2, %edx\n"
"	movl	%ebx, (%ecx)\n"
"	movl	N, %ecx\n"
"	subl	$1, %ecx\n"
"	cmpl	%eax, %ecx\n"
"	jg	.L41\n"
".L40:\n"
"	call	_Z4evalRSt6vectorI5row_tSaIS0_EE.constprop.33\n"
"	fstpl	56(%esp)\n"
"	flds	.LC2\n"
"	fstpl	64(%esp)\n"
"	.p2align 4,,7\n"
"	.p2align 3\n"
".L42:\n"
"	movl	$50, 52(%esp)\n"
"	jmp	.L47\n"
"	.p2align 4,,7\n"
"	.p2align 3\n"
".L67:\n"
"	fstp	%st(0)\n"
".L44:\n"
"	fstpl	56(%esp)\n"
"	.p2align 4,,7\n"
"	.p2align 3\n"
".L43:\n"
"	subl	$1, 52(%esp)\n"
"	je	.L66\n"
".L47:\n"
"	call	rand\n"
"	movl	N, %edx\n"
"	leal	-1(%edx), %ecx\n"
"	movl	%eax, %edx\n"
"	sarl	$31, %edx\n"
"	idivl	%ecx\n"
"	movl	%edx, %ebp\n"
"	call	rand\n"
"	leal	0(,%ebp,8), %esi\n"
"	movl	%eax, %edx\n"
"	shrl	$31, %edx\n"
"	leal	(%eax,%edx), %ebx\n"
"	andl	$1, %ebx\n"
"	subl	%edx, %ebx\n"
"	leal	0(,%ebx,4), %eax\n"
"	addl	curState, %eax\n"
"	movl	(%eax,%esi), %edi\n"
"	movl	$0, %eax\n"
"	addl	$1, %edi\n"
"	subl	N, %edi\n"
"	cmovs	%eax, %edi\n"
"	subl	%edi, %ebp\n"
"	addl	$1, %ebp\n"
"	testl	%ebp, %ebp\n"
"	jle	.L43\n"
"	call	rand\n"
"	movl	%eax, %edx\n"
"	sarl	$31, %edx\n"
"	idivl	%ebp\n"
"	addl	%edx, %edi\n"
"	call	rand\n"
"	sall	$3, %edi\n"
"	movl	%edi, 72(%esp)\n"
"	movl	%eax, %edx\n"
"	shrl	$31, %edx\n"
"	leal	(%eax,%edx), %ebp\n"
"	movl	%edi, %eax\n"
"	andl	$1, %ebp\n"
"	subl	%edx, %ebp\n"
"	movl	curState, %edx\n"
"	addl	%edx, %eax\n"
"	addl	%esi, %edx\n"
"	movl	(%edx,%ebx,4), %ecx\n"
"	movl	(%eax,%ebp,4), %edi\n"
"	movl	%edi, (%edx,%ebx,4)\n"
"	movl	%ecx, (%eax,%ebp,4)\n"
"	call	_Z4evalRSt6vectorI5row_tSaIS0_EE.constprop.33\n"
"	fldl	56(%esp)\n"
"	fucomi	%st(1), %st\n"
"	ja	.L67\n"
"	fsub	%st(1), %st\n"
"	fdivl	64(%esp)\n"
"	fstpl	(%esp)\n"
"	fstpl	16(%esp)\n"
"	call	exp\n"
"	fstpl	32(%esp)\n"
"	call	rand\n"
"	movl	%eax, 76(%esp)\n"
"	fildl	76(%esp)\n"
"	fdivl	.LC5\n"
"	fldl	32(%esp)\n"
"	fucomip	%st(1), %st\n"
"	fstp	%st(0)\n"
"	fldl	16(%esp)\n"
"	ja	.L44\n"
"	fstp	%st(0)\n"
"	movl	curState, %eax\n"
"	movl	72(%esp), %edi\n"
"	addl	%eax, %esi\n"
"	addl	%eax, %edi\n"
"	movl	(%esi,%ebx,4), %eax\n"
"	movl	(%edi,%ebp,4), %edx\n"
"	subl	$1, 52(%esp)\n"
"	movl	%edx, (%esi,%ebx,4)\n"
"	movl	%eax, (%edi,%ebp,4)\n"
"	jne	.L47\n"
"	.p2align 4,,7\n"
"	.p2align 3\n"
".L66:\n"
"	fldl	64(%esp)\n"
"	fmull	.LC6\n"
"	fstl	64(%esp)\n"
"	fldl	.LC7\n"
"	fxch	%st(1)\n"
"	fucomip	%st(1), %st\n"
"	fstp	%st(0)\n"
"	ja	.L42\n"
"	xorl	%ebx, %ebx\n"
"	cmpl	$1, N\n"
"	jle	.L22\n"
"	.p2align 4,,7\n"
"	.p2align 3\n"
".L54:\n"
"	leal	0(,%ebx,8), %eax\n"
"	addl	$1, %ebx\n"
"	addl	curState, %eax\n"
"	movl	4(%eax), %edx\n"
"	addl	$1, %edx\n"
"	movl	%edx, 12(%esp)\n"
"	movl	(%eax), %eax\n"
"	movl	$.LC8, 4(%esp)\n"
"	movl	$1, (%esp)\n"
"	addl	$1, %eax\n"
"	movl	%eax, 8(%esp)\n"
".LEHB2:\n"
"	call	__printf_chk\n"
"	movl	N, %eax\n"
"	subl	$1, %eax\n"
"	cmpl	%ebx, %eax\n"
"	jg	.L54\n"
".L22:\n"
"	addl	$108, %esp\n"
"	.cfi_remember_state\n"
"	.cfi_def_cfa_offset 20\n"
"	popl	%ebx\n"
"	.cfi_def_cfa_offset 16\n"
"	.cfi_restore 3\n"
"	popl	%esi\n"
"	.cfi_def_cfa_offset 12\n"
"	.cfi_restore 6\n"
"	popl	%edi\n"
"	.cfi_def_cfa_offset 8\n"
"	.cfi_restore 7\n"
"	popl	%ebp\n"
"	.cfi_def_cfa_offset 4\n"
"	.cfi_restore 5\n"
"	ret\n"
".L25:\n"
"	.cfi_restore_state\n"
"	movl	$0, 92(%esp)\n"
"	xorl	%eax, %eax\n"
"	xorl	%edi, %edi\n"
"	movl	$0, 72(%esp)\n"
"	xorl	%esi, %esi\n"
"	jmp	.L28\n"
".L29:\n"
"	movl	curState+4, %ebp\n"
"	movl	%ebp, %edi\n"
"	subl	%edx, %edi\n"
"	sarl	$3, %edi\n"
"	cmpl	%edi, %ebx\n"
"	ja	.L35\n"
"	testl	%ebx, %ebx\n"
"	jne	.L36\n"
"	movl	%edx, %ebx\n"
"	jmp	.L34\n"
".L35:\n"
"	sall	$3, %edi\n"
"	leal	(%esi,%edi), %ecx\n"
"	subl	72(%esp), %ecx\n"
"	sarl	$3, %ecx\n"
"	testl	%ecx, %ecx\n"
"	je	.L37\n"
"	sall	$3, %ecx\n"
"	movl	%edx, (%esp)\n"
"	movl	%ecx, 8(%esp)\n"
"	movl	%esi, 4(%esp)\n"
"	call	memmove\n"
"	movl	88(%esp), %eax\n"
"	movl	curState+4, %ebp\n"
"	movl	curState, %edx\n"
"	movl	%eax, 52(%esp)\n"
"	movl	84(%esp), %eax\n"
"	movl	%ebp, %edi\n"
"	subl	%edx, %edi\n"
"	andl	$-8, %edi\n"
".L37:\n"
"	movl	52(%esp), %ecx\n"
"	addl	%eax, %edi\n"
"	subl	%edi, %ecx\n"
"	sarl	$3, %ecx\n"
"	testl	%ecx, %ecx\n"
"	jne	.L38\n"
"	leal	(%edx,%ebx,8), %ebx\n"
"	jmp	.L34\n"
".L51:\n"
"	xorl	%edi, %edi\n"
"	xorl	%ebp, %ebp\n"
"	jmp	.L32\n"
".L36:\n"
"	sall	$3, %ebx\n"
"	movl	%ebx, 8(%esp)\n"
"	movl	%esi, 4(%esp)\n"
"	movl	%edx, (%esp)\n"
"	call	memmove\n"
"	movl	84(%esp), %eax\n"
"	addl	curState, %ebx\n"
"	jmp	.L34\n"
".L38:\n"
"	sall	$3, %ecx\n"
"	movl	%ecx, 8(%esp)\n"
"	movl	%edi, 4(%esp)\n"
"	movl	%ebp, (%esp)\n"
"	call	memmove\n"
"	movl	curState, %eax\n"
"	leal	(%eax,%ebx,8), %ebx\n"
"	movl	84(%esp), %eax\n"
"	jmp	.L34\n"
".L64:\n"
"	call	_ZSt17__throw_bad_allocv\n"
".L53:\n"
"	movl	%eax, %ebx\n"
"	leal	84(%esp), %eax\n"
"	movl	%eax, (%esp)\n"
"	call	_ZNSt6vectorI5row_tSaIS0_EED1Ev\n"
"	movl	%ebx, (%esp)\n"
"	call	_Unwind_Resume\n"
".LEHE2:\n"
".L65:\n"
".LEHB3:\n"
"	call	_ZSt17__throw_bad_allocv\n"
".LEHE3:\n"
"	.cfi_endproc\n"
".LFE599:\n"
"	.globl	__gxx_personality_v0\n"
"	.section	.gcc_except_table,\"a\",@progbits\n"
".LLSDA599:\n"
"	.byte	0xff\n"
"	.byte	0xff\n"
"	.byte	0x1\n"
"	.uleb128 .LLSDACSE599-.LLSDACSB599\n"
".LLSDACSB599:\n"
"	.uleb128 .LEHB0-.LFB599\n"
"	.uleb128 .LEHE0-.LEHB0\n"
"	.uleb128 0\n"
"	.uleb128 0\n"
"	.uleb128 .LEHB1-.LFB599\n"
"	.uleb128 .LEHE1-.LEHB1\n"
"	.uleb128 .L53-.LFB599\n"
"	.uleb128 0\n"
"	.uleb128 .LEHB2-.LFB599\n"
"	.uleb128 .LEHE2-.LEHB2\n"
"	.uleb128 0\n"
"	.uleb128 0\n"
"	.uleb128 .LEHB3-.LFB599\n"
"	.uleb128 .LEHE3-.LEHB3\n"
"	.uleb128 .L53-.LFB599\n"
"	.uleb128 0\n"
".LLSDACSE599:\n"
"	.text\n"
"	.size	_Z5solvev, .-_Z5solvev\n"
"	.section	.text.startup,\"ax\",@progbits\n"
"	.p2align 4,,15\n"
"	.globl	main\n"
"	.type	main, @function\n"
"main:\n"
".LFB600:\n"
"	.cfi_startproc\n"
"	pushl	%ebp\n"
"	.cfi_def_cfa_offset 8\n"
"	.cfi_offset 5, -8\n"
"	movl	%esp, %ebp\n"
"	.cfi_def_cfa_register 5\n"
"	andl	$-16, %esp\n"
"	subl	$32, %esp\n"
"	leal	28(%esp), %eax\n"
"	movl	%eax, 4(%esp)\n"
"	movl	$.LC4, (%esp)\n"
"	call	scanf\n"
"	jmp	.L73\n"
"	.p2align 4,,7\n"
"	.p2align 3\n"
".L74:\n"
"	call	_Z5solvev\n"
".L73:\n"
"	movl	28(%esp), %eax\n"
"	leal	-1(%eax), %edx\n"
"	testl	%eax, %eax\n"
"	movl	%edx, 28(%esp)\n"
"	jne	.L74\n"
"	xorl	%eax, %eax\n"
"	leave\n"
"	.cfi_restore 5\n"
"	.cfi_def_cfa 4, 4\n"
"	ret\n"
"	.cfi_endproc\n"
".LFE600:\n"
"	.size	main, .-main\n"
"	.p2align 4,,15\n"
"	.type	_GLOBAL__sub_I_curState, @function\n"
"_GLOBAL__sub_I_curState:\n"
".LFB712:\n"
"	.cfi_startproc\n"
"	subl	$28, %esp\n"
"	.cfi_def_cfa_offset 32\n"
"	movl	$__dso_handle, 8(%esp)\n"
"	movl	$curState, 4(%esp)\n"
"	movl	$_ZNSt6vectorI5row_tSaIS0_EED1Ev, (%esp)\n"
"	movl	$0, curState\n"
"	movl	$0, curState+4\n"
"	movl	$0, curState+8\n"
"	call	__cxa_atexit\n"
"	addl	$28, %esp\n"
"	.cfi_def_cfa_offset 4\n"
"	ret\n"
"	.cfi_endproc\n"
".LFE712:\n"
"	.size	_GLOBAL__sub_I_curState, .-_GLOBAL__sub_I_curState\n"
"	.section	.ctors,\"aw\",@progbits\n"
"	.align 4\n"
"	.long	_GLOBAL__sub_I_curState\n"
"	.globl	weight\n"
"	.bss\n"
"	.align 32\n"
"	.type	weight, @object\n"
"	.size	weight, 4444\n"
"weight:\n"
"	.zero	4444\n"
"	.globl	K\n"
"	.align 4\n"
"	.type	K, @object\n"
"	.size	K, 4\n"
"K:\n"
"	.zero	4\n"
"	.globl	N\n"
"	.align 4\n"
"	.type	N, @object\n"
"	.size	N, 4\n"
"N:\n"
"	.zero	4\n"
"	.globl	curState\n"
"	.align 4\n"
"	.type	curState, @object\n"
"	.size	curState, 12\n"
"curState:\n"
"	.zero	12\n"
"	.local	_ZZ4evalRSt6vectorI5row_tSaIS0_EEE3tmp\n"
"	.comm	_ZZ4evalRSt6vectorI5row_tSaIS0_EEE3tmp,17776,32\n"
"	.weak	_ZNSt6vectorI5row_tSaIS0_EED1Ev\n"
"	.set	_ZNSt6vectorI5row_tSaIS0_EED1Ev,_ZNSt6vectorI5row_tSaIS0_EED2Ev\n"
"	.section	.rodata.cst4,\"aM\",@progbits,4\n"
"	.align 4\n"
".LC0:\n"
"	.long	1056964608\n"
"	.align 4\n"
".LC2:\n"
"	.long	1133903872\n"
"	.section	.rodata.cst8,\"aM\",@progbits,8\n"
"	.align 8\n"
".LC5:\n"
"	.long	-4194304\n"
"	.long	1105199103\n"
"	.align 8\n"
".LC6:\n"
"	.long	-652835029\n"
"	.long	1072691150\n"
"	.align 8\n"
".LC7:\n"
"	.long	-1717986918\n"
"	.long	1069128089\n"
"	.ident	\"GCC: (Ubuntu/Linaro 4.6.1-9ubuntu3) 4.6.1\"\n"
"	.section	.note.GNU-stack,\"\",@progbits\n"
