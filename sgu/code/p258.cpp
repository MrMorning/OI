#include <cstdio>
#include <algorithm>
using namespace std;
const int inf = 0x3f3f3f3f;

const int TAB[1000] = {683603,683603,683603,683603,683603,683603,683603,683603,683603,683603,1230353,1798030,2410426,3062912,3749773,4464345,5199185,5946275,6698017,7453381,8045634,8658030,9305084,9987913,10699608,11432482,12178285,12928443,13675533,14420490,15054538,15707024,16389853,17101296,17834044,18579791,19329907,20075710,20810550,21537854,22208952,22895813,23607508,24340256,25086003,25836119,26581866,27314740,28029312,28731770,29434228,30148800,30881674,31627421,32377537,33123284,33856032,34567727,35254588,35925686,36652990,37387830,38133633,38883749,39629496,40362244,41073687,41756516,42409002,43043050,43788006,44535090,45285227,46030974,46763722,47475165,48157532,48804586,49416982,50009235,50764137,51515087,52260896,52993770,53705465,54388294,55035348,55640688,56208365,56755115,57512709,58260261,58995102,59709674,60396535,61049021,61661417,62229094,62748607,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247,63247247};

bool isLucky(int x) {
	static int dig[11];
	int nDig = 0;
	while ( x ) {
		dig[nDig ++] = x % 10;
		x /= 10;
	}
	if ( nDig % 2 == 1 )
		return false;
	int sum1 = 0, sum2 = 0;
	for ( int i = 0; i < nDig / 2; i ++ ) 
		sum1 += dig[i];
	for ( int i = nDig / 2; i < nDig; i ++ ) 
		sum2 += dig[i];
	return sum1 == sum2;
}
bool isAlmost(int x) {
	static int dig[11];
	int nDig = 0;
	while ( x ) {
		dig[nDig ++] = x % 10;
		x /= 10;
	}
	if ( nDig % 2 == 1 )
		return false;
	int sum1 = 0, sum2 = 0;
	int d11 = inf, d21 = inf;
	int d12 = 0, d22 = 0;
	for ( int i = 0; i < nDig / 2; i ++ ) {
		sum1 += dig[i];
		d11 = min(d11, (i == nDig - 1 ? 1 : 0) - dig[i]);
		d12 = max(d12, 9 - dig[i]);
	}
	for ( int i = nDig / 2; i < nDig; i ++ ) {
		sum2 += dig[i];
		d21 = min(d21, (i == nDig - 1 ? 1 : 0) - dig[i]);
		d22 = max(d22, 9 - dig[i]);
	}
	if ( sum1 >= sum2 + d21 && sum1 <= sum2 + d22 )
		return true;
	if ( sum2 >= sum1 + d11 && sum2 <= sum1 + d12 )
		return true;
	return false;
}
int calc(int n) {
	if ( n == 1000000000 )
		return TAB[999] + 1;
	int res = TAB[n / 1000000];
	for ( int x = (n / 1000000 + 1) * 1000000 - 1; x > n; x -- )
		res -= !isLucky(x) && isAlmost(x);
	return res;
}
int main() {
	int a, b;
	scanf("%d%d", &a, &b);
	printf("%d\n", calc(b) - calc(a - 1));
}
